name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '16 5 * * 0'

jobs:
  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3  # Updated to v3
      with:
        languages: ${{ matrix.language }}

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3  # Updated to v3
      with:
        category: "/language:${{matrix.language}}"

  eslint-scan:
    name: ESLint Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install ESLint
        run: |
          npm install eslint@8.10.0
          npm install @microsoft/eslint-formatter-sarif@2.1.7

      - name: Run ESLint
        run: npx eslint .
          --config .eslintrc.js
          --ext .js,.jsx,.ts,.tsx
          --format @microsoft/eslint-formatter-sarif
          --output-file eslint-results.sarif
        continue-on-error: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v3  # Updated to v3
        with:
          sarif_file: eslint-results.sarif
          wait-for-processing: true

  web-simulator-tests:
    name: Web Simulator Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm install

      - name: Run Simulator Tests
        run: |
          npm run test -- src/simulator/spec || echo "Simulator tests failed"

  desktop-app-tests:
    name: Desktop App Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22  # Use Node.js 22

      - name: Install Dependencies
        run: npm install

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install Tauri CLI
        run: cargo install tauri-cli

      - name: Build Tauri App using build-desktop.js
        run: |
          # Run the build-desktop.js script
          node build-desktop.js

          # Build the Tauri app
          npm run tauri build -- --debug

      - name: Run Desktop App Tests with Vitest
        run: |
          # Start the Tauri app in the background
          npm run tauri build -- --debug &
          TAURI_PID=$!

          # Wait for the app to start (adjust sleep time as needed)
          sleep 10

          # Run Vitest tests
          npx vitest run --reporter=dot

          # Kill the Tauri app process
          kill $TAURI_PID