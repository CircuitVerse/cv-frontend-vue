name: Vue Simulator Desktop Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Cache Node.js Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Install Dependencies
        run: |
          npm ci
          npm install -g @tauri-apps/cli
        working-directory: ./v0/src

      - name: Build Frontend
        run: npm run build
        working-directory: ./v0/src

      - name: Setup Rust
        if: matrix.os != 'windows-latest'
        run: |
          rustup update stable
          rustup default stable

      - name: Cache Rust Dependencies
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v0"  # Differentiate cache for Rust builds
          workspaces: "./src-tauri"

      - name: Build and Release Tauri App
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: ./src-tauri
          tagName: ${{ github.ref_name }}
          releaseName: "CircuitVerse Desktop ${{ github.ref_name }}"
          releaseBody: "Official CircuitVerse desktop app release. Download below!"
          releaseDraft: false
          prerelease: false

      - name: Upload Tauri Artifacts to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.build-and-release-tauri-app.outputs.release_upload_url }}
          asset_path: ./src-tauri/target/release/bundle
          asset_name: circuitverse-desktop-${{ matrix.os }}-${{ github.ref_name }}
          asset_content_type: application/octet-stream
