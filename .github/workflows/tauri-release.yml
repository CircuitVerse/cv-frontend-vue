name: Vue Simulator Desktop Release

on:
  push:
    branches: [ "main" ]
  release:
    types: [created]

jobs:
  build-tauri:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Cache Node.js Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install
        shell: bash

      - name: Install Tauri CLI and API
        run: |
          npm install -g @tauri-apps/cli
          npm install @tauri-apps/cli @tauri-apps/api @tauri-apps/plugin-fs --save-dev
        shell: bash

      - name: Run Cross-Platform Build Script
        run: node tauri-build.js
        shell: bash

      - name: Setup Rust
        if: matrix.os != 'windows-latest'
        run: |
          rustup update stable
          rustup default stable
        shell: bash

      - name: Install Linux Dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install libwebkit2gtk-4.1-dev \
          build-essential \
          curl \
          wget \
          file \
          libxdo-dev \
          libssl-dev \
          libayatana-appindicator3-dev \
          librsvg2-dev
        shell: bash

      - name: Install macOS Dependencies
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install pkg-config
        shell: bash

      - name: Cache Rust Dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri"

      - name: Build Tauri App
        run: npm run tauri build
        shell: bash

      - name: Upload Tauri Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Tauri Build Artifacts (${{ matrix.os }})
          path: |
            src-tauri/target/release/bundle

  create-release:
    runs-on: ubuntu-latest
    needs: build-tauri
    if: github.event_name == 'release' && github.event.action == 'created'
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Install GitHub CLI
        run: |
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh
        shell: bash

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ github.ref_name }} \
            --title "Release ${{ github.ref_name }}" \
            --notes "Official CircuitVerse desktop app release. Download the binaries below!" \
            artifacts/Tauri\ Build\ Artifacts\ (ubuntu-latest)/* \
            artifacts/Tauri\ Build\ Artifacts\ (windows-latest)/* \
            artifacts/Tauri\ Build\ Artifacts\ (macos-latest)/*
        shell: bash